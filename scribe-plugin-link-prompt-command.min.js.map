{"version":3,"file":"scribe-plugin-link-prompt-command.min.js","mappings":"AAAAA,OAAA,gCAAA,WACA,MAAA,UAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,OAAAC,OAAA,gBAAAL,EAAAG,KAEA,QAAAA,GACAH,EAAAG,KAAAA,EACAF,EAAAD,IAEAE,OAKAH,OAAA,qCACA,8BACA,SAAAO,GAOA,MAAA,UAAAC,GACA,MAAA,UAAAC,GACA,GAAAC,GAAA,GAAAD,GAAAE,IAAAC,QAAA,aAEAH,GAAAI,SAAAC,WAAAJ,EAEAA,EAAAK,SAAA,IAEAL,EAAAM,WAAA,WAMA,GAAAC,GAAA,GAAAR,GAAAE,IAAAO,SACA,SAAAD,EAAAE,cAAA,SAAAC,GACA,MAAAA,GAAAL,WAAAM,KAAAN,UACAO,KAAAD,QAGAX,EAAAa,QAAA,WACA,GAAAN,GAAA,GAAAR,GAAAE,IAAAO,UACAM,EAAAP,EAAAO,MACAC,EAAAR,EAAAE,cAAA,SAAAC,GACA,MAAAA,GAAAL,WAAAM,KAAAN,UACAO,KAAAD,MAEAI,KACAD,EAAAE,WAAAD,GACAR,EAAAA,UAAAU,kBACAV,EAAAA,UAAAW,SAAAJ,GAGA,IAAAK,KACA,IAAAJ,GAAAA,EAAAK,gBACA,IAAA,GAAAC,GAAA,EAAAA,EAAAN,EAAAxB,WAAA+B,OAAAD,IAAA,CACA,GAAAE,GAAAR,EAAAxB,WAAA8B,EACAF,GAAAI,EAAAC,MAAAD,EAAAE,MAIA,GAAAC,SAAA,SAAAlC,EAAAC,GACAK,EACAA,EAAA6B,OAAAC,OAAAT,GAAA3B,EAAAC,GAEAI,EAAA8B,OAAAC,OAAAT,GAAA3B,EAAAC,KAEAoC,KAAA,SAAAtC,GAIA,GAAAA,EAAAG,KAAA,CAGA,GAAAoC,GAAA,gBACAC,EAAA,WACA,KAAAD,EAAAE,KAAAzC,EAAAG,QAAAqC,EAAAC,KAAAzC,EAAAG,MAEA,GAAA,IAAAsC,KAAAzC,EAAAG,MAAA,CACA,GAAAuC,GAAAtC,OAAAuC,QACA,wGAGAD,KACA1C,EAAAG,KAAA,UAAAH,EAAAG,UAEA,CACA,GAAAyC,GAAAxC,OAAAuC,QACA,8FAGAC,KACA5C,EAAAG,KAAA,UAAAH,EAAAG,MAaA,GAPAa,EAAAZ,OAAAyC,eACA7B,EAAAU,kBACAV,EAAAW,SAAAJ,GAEAf,EAAAE,IAAAoC,cAAAC,UAAAzB,QAAA0B,KAAA5B,KAAApB,EAAAG,MAGAqB,GAIA,IAAA,GADAyB,GAAA1B,EAAA2B,wBAAAC,iBAAA,KACArB,EAAA,EAAAA,EAAAmB,EAAAlB,OAAAD,IACA,GAAAd,EAAAoC,aAAAH,EAAAnB,IAAA,GAAA,CACAN,EAAAyB,EAAAnB,EACA,YANAN,GAAAD,EAAA2B,wBAAAG,eAWA,KAAA,GAAAC,KAAAtD,GACAA,EAAAuD,eAAAD,IACA9B,EAAAgC,aAAAF,EAAAtD,EAAAsD,MAIAjC,KAAAD,OA9DA,SA8DA","sources":["../src/scribe-plugin-link-prompt-command.js"],"sourcesContent":["define('scribe-default-link-prompt', [], function() {\n  return function( attributes, resolve, reject) {\n    var href = window.prompt('Enter a link.', attributes.href);\n\n    if (href !== null) {\n      attributes.href = href;\n      resolve(attributes);\n    } else {\n      reject();\n    }\n  };\n});\n\ndefine('scribe-plugin-link-prompt-command',\n    ['scribe-default-link-prompt'],\n    function (defaultPrompt) {\n\n  /**\n   * This plugin adds a command for creating links, including a basic prompt.\n   */\n\n  'use strict';\n  return function (customPrompt) {\n    return function (scribe) {\n      var linkPromptCommand = new scribe.api.Command('createLink');\n\n      scribe.commands.linkPrompt = linkPromptCommand;\n\n      linkPromptCommand.nodeName = 'A';\n\n      linkPromptCommand.queryState = function () {\n        /**\n         * We override the native `document.queryCommandState` for links because\n         * the `createLink` and `unlink` commands are not supported.\n         * As per: http://jsbin.com/OCiJUZO/1/edit?js,console,output\n         */\n        var selection = new scribe.api.Selection();\n        return !! selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n      };\n\n      linkPromptCommand.execute = function () {\n        var selection = new scribe.api.Selection();\n        var range = selection.range;\n        var anchorNode = selection.getContaining(function (node) {\n          return node.nodeName === this.nodeName;\n        }.bind(this));\n\n        if (anchorNode) {\n          range.selectNode(anchorNode);\n          selection.selection.removeAllRanges();\n          selection.selection.addRange(range);\n        }\n\n        var initialAttributes = {};\n        if (anchorNode && anchorNode.hasAttributes()) {\n          for (var i = 0; i < anchorNode.attributes.length; i++) {\n            var attr = anchorNode.attributes[i];\n            initialAttributes[attr.name] = attr.value;\n          }\n        }\n\n        new Promise(function(resolve, reject) {\n          if (customPrompt) {\n            customPrompt(Object.create(initialAttributes), resolve, reject);\n          } else {\n            defaultPrompt(Object.create(initialAttributes), resolve, reject);\n          }\n        }).then(function(attributes) {\n          // FIXME: I don't like how plugins like this do so much. Is there a way\n          // to compose?\n\n          if (attributes.href) {\n            // Prepend href protocol if missing\n            // If a http/s or mailto link is provided, then we will trust that an link is valid\n            var urlProtocolRegExp = /^https?\\:\\/\\//;\n            var mailtoProtocolRegExp = /^mailto\\:/;\n            if (! urlProtocolRegExp.test(attributes.href) && ! mailtoProtocolRegExp.test(attributes.href)) {\n              // For emails we just look for a `@` symbol as it is easier.\n              if (/@/.test(attributes.href)) {\n                var shouldPrefixEmail = window.confirm(\n                    'The URL you entered appears to be an email address. ' +\n                    'Do you want to add the required “mailto:” prefix?'\n                    );\n                if (shouldPrefixEmail) {\n                  attributes.href = 'mailto:' + attributes.href;\n                }\n              } else {\n                var shouldPrefixLink = window.confirm(\n                    'The URL you entered appears to be a link. ' +\n                    'Do you want to add the required “http://” prefix?'\n                    );\n                if (shouldPrefixLink) {\n                  attributes.href = 'http://' + attributes.href;\n                }\n              }\n            }\n\n            // Restore the selection\n            selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            scribe.api.SimpleCommand.prototype.execute.call(this, attributes.href);\n\n            // Find the new anchor node\n            if (!anchorNode) {\n              anchorNode = range.commonAncestorContainer.previousSibling;\n            } else {\n              var anchorNodes = range.commonAncestorContainer.querySelectorAll('a');\n              for (var i=0; i<anchorNodes.length; i++) {\n                if (selection.containsNode(anchorNodes[i], true)) {\n                  anchorNode = anchorNodes[i];\n                  break;\n                }\n              }\n            }\n\n            for (var key in attributes) {\n              if (attributes.hasOwnProperty(key)) {\n                anchorNode.setAttribute(key, attributes[key]);\n              }\n            }\n          }\n        }.bind(this)).catch(function() {\n          // Cancel\n        });\n      };\n    };\n  };\n\n});\n\n"],"names":["define","attributes","resolve","reject","href","window","prompt","defaultPrompt","customPrompt","scribe","linkPromptCommand","api","Command","commands","linkPrompt","nodeName","queryState","selection","Selection","getContaining","node","this","bind","execute","range","anchorNode","selectNode","removeAllRanges","addRange","initialAttributes","hasAttributes","i","length","attr","name","value","Promise","Object","create","then","urlProtocolRegExp","mailtoProtocolRegExp","test","shouldPrefixEmail","confirm","shouldPrefixLink","getSelection","SimpleCommand","prototype","call","anchorNodes","commonAncestorContainer","querySelectorAll","containsNode","previousSibling","key","hasOwnProperty","setAttribute"]}